@mixin _breakpoint-min($width) {
  @media (min-width: $width+'px') {
      @content;
  }
}

@mixin grid($grid-temp-0,
            $grid-temp-1:null,$grid-size-1:null,
            $grid-temp-2:null,$grid-size-2:null,
            $grid-temp-3:null,$grid-size-3:null,
            $grid-temp-4:null,$grid-size-4:null,
)
{
  // @debug $grid-size-1;
  $g-t-c: 'grid-template-columns';
  display: grid;
  #{$g-t-c}: $grid-temp-0;
  grid-auto-flow: dense;
  overflow: hidden;
  @if ($grid-temp-1 != null and $grid-size-1 != null ) {@include _breakpoint-min($grid-size-1) {#{$g-t-c}: $grid-temp-1;}}
  @if ($grid-temp-2 != null and $grid-size-2 != null ) {@include _breakpoint-min($grid-size-2) {#{$g-t-c}: $grid-temp-2;}}
  @if ($grid-temp-3 != null and $grid-size-3 != null ) {@include _breakpoint-min($grid-size-3) {#{$g-t-c}: $grid-temp-3;}}
  @if ($grid-temp-4 != null and $grid-size-4 != null ) {@include _breakpoint-min($grid-size-4) {#{$g-t-c}: $grid-temp-4;}}

}





@mixin horizontal-gradient($from , $stop: 100%) {
  /* fallback/image non-cover color */
  background-color: $from;
  $from-transp: rgba($from , .43 );
  $to-transp: rgba($from , .2 );

  background: linear-gradient(to right, $from-transp 0%, $to-transp $stop);
}

@mixin image-horizontal-gradient($url, $from , $stop: 100%) {
  /* fallback/image non-cover color */
  background-color: $from;
  $color-transp: rgba($from , .2 );

  background: url($url), linear-gradient(to right, $from 0%, $color-transp $stop);
}

@mixin overlay($bgColor: #000, $bgOpacity: 0.6){
	&:after{
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background: rgba($bgColor, $bgOpacity);
    z-index: 0;
	}
}
